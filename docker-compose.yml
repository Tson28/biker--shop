version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: bikerhub-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: bikerhub2024
      MONGO_INITDB_DATABASE: bikerhub
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - bikerhub-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: bikerhub-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass bikerhub2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bikerhub-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: bikerhub-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:bikerhub2024@mongodb:27017/bikerhub?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: bikerhub2024
      JWT_SECRET: bikerhub-super-secret-jwt-key-2024-production
      SESSION_SECRET: bikerhub-super-secret-session-key-2024-production
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: noreply@bikerhub.com
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backend/temp:/app/temp
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bikerhub-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend (Nginx)
  frontend:
    image: nginx:1.25-alpine
    container_name: bikerhub-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - bikerhub-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Express (Admin UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: bikerhub-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: bikerhub2024
      ME_CONFIG_MONGODB_URL: mongodb://admin:bikerhub2024@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: bikerhub2024
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - bikerhub-network

  # Redis Commander (Admin UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: bikerhub-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:bikerhub2024
      HTTP_USER: admin
      HTTP_PASSWORD: bikerhub2024
    ports:
      - "8082:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - bikerhub-network

  # Nginx Reverse Proxy
  nginx-proxy:
    image: nginx:1.25-alpine
    container_name: bikerhub-nginx-proxy
    restart: unless-stopped
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - bikerhub-network

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: bikerhub-certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email admin@bikerhub.com -d bikerhub.com -d www.bikerhub.com --agree-tos
    depends_on:
      - nginx-proxy
    networks:
      - bikerhub-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  bikerhub-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Custom labels for better management
labels:
  - "bikerhub.project=bikerhub-ecommerce"
  - "bikerhub.version=2.0.0"
  - "bikerhub.environment=production"
